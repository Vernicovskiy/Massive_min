/* 10.Сумму модулей элементов массива, расположенных после минимального по модулю элемента.*/
#include <iostream>  // библиотека для cin , cout;
#include <math.h>   // библиотека для математических элементов например взятие по модулю abs и многое другое
#include <iomanip> // библиотека для setw()
#include <time.h> // библиотека для srand(time(NULL))

using namespace std;

int main()
{
    setlocale(LC_ALL, "Russian"); // установка кириллицы
    srand(time(NULL)); // для того , чтобы случайные величины(rand) при каждом запуске программы были разные

    cout << "Введите 1, для ввода с клавиатуры, 2 - для использования инициализированных элементов, 3 - для использования случайных элементов" << endl;
    int z;
    cin >> z;
    const int N = 6;
    int a[N] = { 0, 1, 2, 3, 4, 5 }, sum = 0;

    switch (z) {  // что-то типа меню , работает очень схоже с if()
    case 1:
        cout << "Введите элементы массива" << endl;
        for (int i = 0; i < N; i++) { 
            cin >> a[i];
        }
        cout << endl;
        break;
    case 2:
        for (int i = 0; i < N; i++) {
            cout << setw(3) << a[i] ;// setw() - Задаем ширину отображения поля
        }
        cout << endl;
        break;
    case 3:

        for (int i = 0; i < N; i++) // заполняем массив
            a[i] = rand() % 100 - rand() % 100; // задаем случайные  числа в интервале (-100 ; 100)
        for (int i = 0; i < N; i++)  // выводим массив в консоль
            cout << setw(3) << a[i] << " ";
        cout << endl;
        break;
    default:
        cout << " неверный ввод, введите 1, 2 или 3" << sum;
        return 1;
    }

    int i_min = 0; // индекс минимального элемента в массиве ( для начала возьмем 0 индекс)
    int b = a[i_min]; // предполагаем , что самый первый элемент в массиве минимальный
    for (int i = 1; i < N; i++) {
        if (abs(a[i]) < abs(b)) {  
            i_min = i; // считаем индекс минимального значения 
            b = a[i]; //если встречаем элемент массива меньше предыдущего , то делаем его минимальным
        }
    }

    cout << "min_modul_val = " << abs(b) << "; min_index = " << i_min << endl;
    int j = N-1;
    while(j > i_min) { 
        sum += abs(a[j]); //считаем сумму модулей элементов массива, расположенных после минимального по модулю элемента ( начинаем с конца массива и до нужного минимального числа)
        j -= 1;
    }
    cout << " sum = " << sum <<endl;

    system("pause");
}